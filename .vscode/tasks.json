{
	"version": "2.0.0",
	"tasks": [
{
  "label": "Build WaveDynamics2D (Debug)",
  "type": "shell",
  "command": "make",
  "args": ["WaveDynamics2D"],
  "options": {
    "cwd": "${workspaceFolder}/build/debug"
  },
  "group": {
    "kind": "build",
    "isDefault": false
  },
  "problemMatcher": []
},

		
		{
            "label": "Build WaveDynamics2D",
            "type": "shell",
            "command": "g++",
            "args": [
		"-std=c++17",
		  "drivers/WaveDynamics2D.cpp",
		  "src/save.cpp",             // ← Add more .cpp files 
		  // here as needed
		  "src/quess.cpp",
		  "../mfem/libmfem.a",        // link against MFEM static library
		  "-Iinclude",                // your own headers
		  "-I../mfem",                // MFEM base
		  "-I../mfem/fem",
		  "-I../mfem/linalg",
		  "-I../mfem/general",
		  "-I../mfem/mesh",
		  "-I/opt/homebrew/Cellar/nlohmann-json/3.12.0/include",
		  "-ldl",                     // MFEM dependencies
		  "-lpthread",
		  "-o",
		  "build/WaveDynamics2D"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"]
        },
       {
  "label": "Run WaveDynamics2D",
  "type": "shell",
  "command": "./build/debug/WaveDynamics2D",
  "options": {
    "cwd": "${workspaceFolder}"
  },
  "presentation": {
    "echo": true,
    "reveal": "always",
    "focus": false,
    "panel": "shared"
  },
  "problemMatcher": []
}, 

{
  "label": "Build and Run WaveDynamics2D (Debug)",
  "type": "shell",
  "dependsOn": ["Build WaveDynamics2D (Debug)", "Run WaveDynamics2D"],
  "dependsOrder": "sequence",
  "group": {
    "kind": "build",
    "isDefault": false
  },
  "problemMatcher": []
},


	  {
		"label": "Build my_wave_solver",
		"type": "shell",
		"command": "g++",
		"args": [
		  "-std=c++17",
		  "drivers/my_wave_solver.cpp",
		  "src/save.cpp",             // ← Add more .cpp files 
		  // here as needed
		  "src/quess.cpp",
		  "../mfem/libmfem.a",        // link against MFEM static library
		  "-Iinclude",                // your own headers
		  "-I../mfem",                // MFEM base
		  "-I../mfem/fem",
		  "-I../mfem/linalg",
		  "-I../mfem/general",
		  "-I../mfem/mesh",
		  "-I/opt/homebrew/Cellar/nlohmann-json/3.12.0/include",
		  "-ldl",                     // MFEM dependencies
		  "-lpthread",
		  "-o",
		  "build/my_wave_solver"
		],
		"options": {
		  "cwd": "${workspaceFolder}"
		},
		"group": {
		  "kind": "build",
		  "isDefault": true
		},
		"problemMatcher": ["$gcc"]
	  },
	  {
		"label": "Clear Test Results Folder",
		"type": "shell",
		"command": "./scripts/clear_results.sh",
		"problemMatcher": [],
		"group": "build"
	  },
	  {
		"label": "Plot Point Displacement",
		"type": "shell",
		"command": "./scripts/run_plot.sh",
		"problemMatcher": [],
		"group": "build"
	  },

	  {
		"label": "Run my_wave_solver with input.json",
		"type": "shell",
		"command": "./build/my_wave_solver",
		"args": ["scripts/SimulationParameters.json"],
		// "options": {
		//   "shell": {
		// 	"executable": "/opt/homebrew/bin/zsh"
		//   },
		//   "cwd": "${workspaceFolder}"
		// },
		"dependsOn": ["Build my_wave_solver"],
		"problemMatcher": []
	  },
	  {
		"label": "Run my_wave_solver",
		"type": "shell",
		"command": "./build/my_wave_solver",
		"options": {
		  "cwd": "${workspaceFolder}"
		},
		"problemMatcher": [],
		"group": "none"
	  },

	  {
		"label": "Build and Run my_wave_solver",
		"dependsOn": ["Build my_wave_solver", "Run my_wave_solver"],
		"dependsOrder": "sequence"
	  },

	  {
      "label": "Build mesh_info_driver",
      "type": "shell",
      "command": "g++",
      "args": [
        "-std=c++17",
		"-g",
		"drivers/mesh_info_driver.cpp",
		  "src/save.cpp",             // ← Add more .cpp files 
		  // here as needed
		  "src/quess.cpp",
		  "../mfem/libmfem.a",        // link against MFEM static library
		  "-Iinclude",                // your own headers
		  "-I../mfem",                // MFEM base
		  "-I../mfem/fem",
		  "-I../mfem/linalg",
		  "-I../mfem/general",
		  "-I../mfem/mesh",
		  "-I/opt/homebrew/Cellar/nlohmann-json/3.12.0/include",
		  "-ldl",                     // MFEM dependencies
		  
		  "-lpthread",
		  "-o", "build/mesh_info_driver",
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "problemMatcher": [],
      "detail": "Compile mesh_info_driver using MFEM in ../MFEM"
    },
    {
      "label": "Run mesh_info_driver",
      "type": "shell",
      "command": "./build/mesh_info_driver",
      "args": [
        // "-m", "input/meshes/my_mesh2.mesh"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "dependsOn": ["Build mesh_info_driver"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": [],
      "detail": "Run mesh_info_driver with input/star.mesh"
    },
	
	]
  }